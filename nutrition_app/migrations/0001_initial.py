# Generated by Django 5.2.7 on 2025-10-11 09:32

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название блюда')),
                ('meal_type', models.CharField(choices=[('breakfast', 'Завтрак'), ('lunch', 'Обед'), ('snack', 'Перекус'), ('dinner', 'Ужин')], max_length=20, verbose_name='Тип приема пищи')),
                ('calories', models.IntegerField(verbose_name='Калории')),
                ('protein', models.DecimalField(decimal_places=1, max_digits=5, verbose_name='Белки (г)')),
                ('fat', models.DecimalField(decimal_places=1, max_digits=5, verbose_name='Жиры (г)')),
                ('carbs', models.DecimalField(decimal_places=1, max_digits=5, verbose_name='Углеводы (г)')),
                ('ingredients', models.TextField(verbose_name='Ингредиенты')),
                ('instructions', models.TextField(verbose_name='Инструкция приготовления')),
                ('image', models.ImageField(blank=True, null=True, upload_to='recipes/', verbose_name='Изображение')),
                ('cooking_time', models.IntegerField(default=15, verbose_name='Время приготовления (мин)')),
                ('difficulty', models.CharField(choices=[('easy', 'Легко'), ('medium', 'Средне'), ('hard', 'Сложно')], default='easy', max_length=20, verbose_name='Сложность')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Возраст')),
                ('weight', models.FloatField(blank=True, null=True, verbose_name='Вес (кг)')),
                ('height', models.FloatField(blank=True, null=True, verbose_name='Рост (см)')),
                ('gender', models.CharField(choices=[('male', 'Мужской'), ('female', 'Женский')], default='male', max_length=10, verbose_name='Пол')),
                ('goal', models.CharField(choices=[('loss', 'Похудение'), ('maintenance', 'Поддержание веса'), ('gain', 'Набор массы')], default='maintenance', max_length=20, verbose_name='Цель')),
                ('activity_level', models.CharField(choices=[('sedentary', 'Малоподвижный'), ('light', 'Легкая активность'), ('moderate', 'Умеренная активность'), ('high', 'Высокая активность'), ('extreme', 'Очень высокая активность')], default='sedentary', max_length=20, verbose_name='Уровень активности')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_calories', models.IntegerField(default=2000, verbose_name='Суточная норма калорий')),
                ('motivation_message', models.TextField(blank=True, verbose_name='Мотивационное сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
